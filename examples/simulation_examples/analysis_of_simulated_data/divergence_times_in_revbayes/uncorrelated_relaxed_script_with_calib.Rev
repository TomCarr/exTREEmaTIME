n_taxa <- data.ntaxa()
taxa <- data.taxa()
n_branches <- n_taxa*2 - 2

mvi = 0
mni = 0

###################

Q := fnJC(4)

###################

rho <- 1
root_time <- tree.rootAge()
speciation <- 3
extinction <- 0

timetree ~ dnBDP(lambda=speciation, mu=extinction, rho=rho, rootAge=root_time, samplingStrategy="uniform", condition="nTaxa", taxa=taxa)
timetree.setValue(tree)

tmrca_one := tmrca(timetree, clade("t19", "t23"))
min_age_one <- 0.12663
max_age_one <- root_time
width_age_prior_one <- (max_age_one - min_age_one)/2
mean_age_prior_one <- min_age_one + width_age_prior_one
one_calibration ~ dnUniform(tmrca_one - width_age_prior_one, tmrca_one + width_age_prior_one)
one_calibration.clamp(mean_age_prior_one)

moves[++mvi] = mvSubtreeScale(timetree, weight=5.0)
moves[++mvi] = mvNodeTimeSlideUniform(timetree, weight=15.0)
moves[++mvi] = mvTreeScale(tree=timetree, delta=1.0, weight=3.0, tune=true)
moves[++mvi] = mvTreeScale(tree=timetree, delta=0.1, weight=3.0, tune=true)
moves[++mvi] = mvTreeScale(tree=timetree, delta=0.01, weight=3.0, tune=true)

###################

clock_mean ~ dnLnorm(ln(clock_means_means[z]) - ((clock_means_sds[z]^2)/2), clock_means_sds[z]) 
moves[++mvi] = mvScale(clock_mean, lambda = 1, weight=2.0, tune=true)

clock_sd ~ dnLnorm(ln(clock_sds_means[z]) - ((clock_sds_sds[z]^2)/2), clock_sds_sds[z]) 
moves[++mvi] = mvScale(clock_sd, lambda = 1, weight=2.0, tune=true)

for(i in 1:n_branches){
branch_rates[i] ~ dnLnorm(ln(clock_mean) - ((clock_sd^2)/2), clock_sd)
moves[++mvi] = mvScale(branch_rates[i], lambda = 1, weight=2.0, tune=true)
}

moves[++mvi] = mvVectorScale(branch_rates,lambda=1.0,weight=2.0, tune=true) 
moves[++mvi] = mvVectorSingleElementScale(branch_rates,lambda=30.0,weight=1.0, tune=true)

###################

seq ~ dnPhyloCTMC(timetree, Q=Q, branchRates=branch_rates, type="DNA")
seq.clamp(data)

###################

mymodel = model(timetree)

monitors[++mni] = mnModel(filename=output_files[z] + "model.log", printgen=200, separator = TAB)
monitors[++mni] = mnFile(filename=output_files[z] + "sampled_trees.trees", printgen=200, timetree)
monitors[++mni] = mnScreen(printgen=200)

mymcmc = mcmc(mymodel, monitors, moves, nruns=1)
#mymcmc.burnin(generations=100000, tuningInterval=500)
mymcmc.run(generations=1000000)

###################

clear(monitors, moves, n_taxa, taxa, n_branches, Q, rho, root_time, extinction, speciation, timetree, branch_rates, seq)
